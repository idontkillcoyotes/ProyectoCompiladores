Inicio -> Clase Clases $
Clases -> Clase Clases 
Clases -> ''
Clase -> class idClase Herencia { Miembros }
Herencia -> extends idClase 
Herencia -> ''
Miembros -> Miembro Miembros 
Miembros -> ''
Miembro -> Atributo 
Miembro -> Ctor
Miembro -> Metodo 
Atributo -> Visibilidad Tipo ListaDecVars Inicializacion ;
Inicializacion -> = Expresion
Inicializacion -> ''
Metodo -> FormaMetodo TipoMetodo idMetVar ArgsFormales Bloque
Ctor -> idClase ArgsFormales Bloque
ArgsFormales -> ( ListaArg )
ListaArg -> Arg ArgFormales
ListaArg -> ''
ArgFormales -> , Arg ArgFormales
ArgFormales -> ''
Arg -> Tipo idMetVar
FormaMetodo -> static
FormaMetodo -> dynamic
Visibilidad -> public 
Visibilidad -> private
TipoMetodo -> Tipo
TipoMetodo -> void
Tipo -> boolean PosibleArreglo
Tipo -> char PosibleArreglo
Tipo -> int PosibleArreglo
Tipo -> idClase PosibleArreglo
Tipo -> String PosibleArreglo
PosibleArreglo -> [ ] PosibleArreglo /* Permitir matrices? */
PosibleArreglo -> ''
ListaDecVars -> idMetVar ListaDV
ListaDV -> , idMetVar ListaDV
ListaDV -> ''
Bloque -> { Sentencias }
Sentencias -> Sentencia Sentencias
Sentencias -> ''
Sentencia -> ;
Sentencia -> if ( Expresion ) Sentencia SentenciaElse
Sentencia -> while ( Expresion ) Sentencia
Sentencia -> return Expresiones ;
Sentencia -> Asignacion ;
Sentencia -> SentenciaLlamada ;
Sentencia -> Tipo ListaDecVars Inicializacion ;
Sentencia -> Bloque
SentenciaElse -> else Sentencia
SentenciaElse -> ''
Expresiones -> Expresion
Expresiones -> ''
Asignacion -> AccesoVar = Expresion
Asignacion -> AccesoThis = Expresion
SentenciaLlamada -> ( Primario )
Expresion -> ExpOr
ExpOr -> ExpAnd ExpOrR
ExpOrR -> || ExpAnd ExpOrR
ExpOrR -> ''
ExpAnd -> ExpIg ExpAndR
ExpAndR -> && ExpIg ExpAndR
ExpAndR -> ''
ExpIg -> ExpComp ExpIgR
ExpIgR -> OpIgual ExpComp ExpIgR
ExpIgR -> ''
ExpComp -> ExpAd ExpCompR
ExpCompR -> OpComp ExpAd
ExpCompR -> ''
ExpAd -> ExpMul ExpAdR
ExpAdR -> OpAd ExpMul ExpAdR
ExpAdR -> ''
ExpMul -> ExpUn ExpMulR
ExpMulR -> OpMul ExpUn ExpMulR
ExpMulR -> ''
ExpUn -> OpUn ExpUn
ExpUn -> Operando
OpIgual -> ==
OpIgual -> !=
OpComp -> <
OpComp -> >
OpComp -> <=
OpComp -> >=
OpAd -> +
OpAd -> -
OpUn -> +
OpUn -> -
OpUn -> !
OpMul -> *
OpMul -> /
Operando -> Literal
Operando -> Primario
Literal -> null
Literal -> true
Literal -> false
Literal -> intLiteral
Literal -> charLiteral
Literal -> stringLiteral
Primario -> idMetVar MetodoVariable
Primario -> ExpresionParentizada
Primario -> AccesoThis
Primario -> LlamadaMetodoEstatico
Primario -> LlamadaCtor
MetodoVariable -> ArgsActuales Encadenado
MetodoVariable -> Encadenado
ExpresionParentizada -> ( Expresion ) Encadenado
Encadenado -> . idMetVar Acceso
Encadenado -> AccesoArregloEncadenado
Encadenado -> ''
Acceso -> LlamadaMetodoEncadenado
Acceso -> AccesoVarEncadenado
AccesoThis -> this Encadenado
AccesoVar -> idMetVar Encadenado
LlamadaMetodo -> idMetVar ArgsActuales Encadenado
LlamadaMetodoEstatico -> idClase . LlamadaMetodo
LlamadaCtor -> new LlamadaCtorR
LlamadaCtorR -> idClase LlamadaCtorIDClase
LlamadaCtorR -> TipoArreglo [ Expresion ] Encadenado
LlamadaCtorIDClase -> ArgsActuales Encadenado
LlamadaCtorIDClase -> [ Expresion ] Encadenado
TipoArreglo -> char
TipoArreglo -> boolean
TipoArreglo -> int
TipoArreglo -> String 
ArgsActuales -> ( ListaExpresiones )
ListaExpresiones -> Expresion ListaExp
ListaExpresiones -> ''
ListaExp -> , Expresion ListaExp
ListaExp -> ''
LlamadaMetodoEncadenado -> ArgsActuales Encadenado
AccesoVarEncadenado -> Encadenado
AccesoArregloEncadenado -> [ Expresion ] Encadenado
